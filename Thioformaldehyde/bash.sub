#!/bin/bash
#SBATCH --time=2-23:00:00
#SBATCH --partition ccp20
#SBATCH --nodes=1
#SBATCH --ntasks-per-node=16
#SBATCH --ntasks-per-core=1
#SBATCH --exclusive
#SBATCH --job-name CH2S
#SBATCH --output=log%j
#SBATCH --error=error%j

module purge
module load python3
module load molGW/latest

ulimit -s unlimited

# We make a folder where we store the results of the path that was ultimately chosen and all the resulting simulations
mkdir gradient_path
mkdir Simulations

# The maximum amount of iterations that are done is 200
for i in {0..199..1}
   do 

      # Then we check if the stop file has already been created

      if [ -f "simulation.stop" ]; then
         echo 'Simulation.stop has been found the simulation is being terminated'

         # After the complete simulation is over we collect the data of the path we took
         python3 Get_data.py -n $i

         break
      fi


      echo "Running simulation $i"
      
      #First we make the folder in which we store all the relevant data
      mkdir Simulations/iteration_$i
      python3 Make_derivatives_1.py -zmat 'Thio.zmat' -i $i
      mv Thio.zmat Simulations/iteration_$i/Thio_${i}.zmat
      wait

      for folder in Simulations/iteration_${i}/*;do
         if [ -d "$folder" ]; then
            # We move the structure file of the current configuration and run the molgw calculations
            mv ${folder}/structure.xyz structure.xyz
            mpirun -np 16 molgw gw.in > gw.out

            # We move a few of the files before the BSE step
            mv molgw.yaml ${folder}/molgw_gw.yaml
            mv gw.out ${folder}/gw.out

            mpirun -np 16 molgw bse.in > bse.out 

            # Now we move all the results of these simulations back into the corresponding folders
            mv molgw.yaml ${folder}/molgw_bse.yaml
            mv bse.out ${folder}/bse.out
            mv RESTART ${folder}/RESTART
            mv ENERGY_QP ${folder}/ENERGY_QP
            mv dynamical_dipole_polarizability.dat ${folder}/dynamical_dipole_polarizability.dat
            mv photoabsorption_cross_section.dat ${folder}/photoabsorption_cross_section.dat
         fi

         # if statement checking if 200 iterations has been achieved

         # After the complete simulation is over we collect the data of the path we took
         #python3 Get_data.py -n 100

      done
   wait

   echo "Running gradient descent script"
   # Finally we perform gradient descent and make a new location file 
   python3 Gradient_descent.py -id $i -ex 1

   # Then we finally also run the new configuration that we are in
   mv Thio.xyz structure.xyz
   mpirun -np 16 molgw gw.in > gw.out

   # Creating the folder where we store the simulation results
   mkdir gradient_path/step_$i

   # We move a few of the files before the BSE step
   mv molgw.yaml gradient_path/step_$i/molgw_gw.yaml
   mv gw.out gradient_path/step_$i/gw.out

   # Then we run the BSE step
   mpirun -np 16 molgw bse.in > bse.out 

   # Now we move all the results of these simulations back into the corresponding folders
   mv molgw.yaml gradient_path/step_$i/molgw_bse.yaml
   mv bse.out gradient_path/step_$i/bse.out
   mv RESTART gradient_path/step_$i/RESTART
   mv ENERGY_QP gradient_path/step_$i/ENERGY_QP
   mv dynamical_dipole_polarizability.dat gradient_path/step_$i/dynamical_dipole_polarizability.dat
   mv photoabsorption_cross_section.dat gradient_path/step_$i/photoabsorption_cross_section.dat

   mv structure.xyz gradient_path/step_$i/Thio.xyz

   wait
done


